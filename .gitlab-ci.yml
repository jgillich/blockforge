image: centos:7

variables:
  GIT_SUBMODULE_STRATEGY: normal
  GOPATH: /go
  REPO_NAME: gitlab.com/jgillich/autominer

before_script:
  - yum install -y epel-release
  - yum install -y @development which gcc-c++ go boost-devel hwloc-devel openssl-devel mesa-libGL-devel ocl-icd-devel jsoncpp-devel webkitgtk4-devel swig cmake
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - prepare
  - test
  - build

ethminer:
  stage: prepare
  script:
    - cmake -Hcgo/ethminer/ethminer -Bcgo/ethminer/ethminer/build
    - make -C cgo/ethminer/ethminer/build
  artifacts:
    # https://gitlab.com/gitlab-org/gitlab-runner/issues/2457
    # untracked: true
    paths:
      - cgo/ethminer/ethminer/build

xmrstak:
  stage: prepare
  script:
    - cmake -Hcgo/xmrstak/xmr-stak -Bcgo/xmrstak/xmr-stak/build -DCUDA_ENABLE=OFF -DMICROHTTPD_ENABLE=OFF
    - make -C cgo/xmrstak/xmr-stak/build
  artifacts:
    # https://gitlab.com/gitlab-org/gitlab-runner/issues/2457
    # untracked: true
    paths:
      - cgo/xmrstak/xmr-stak/build

dep:
  stage: prepare
  script:
    - go get -u github.com/golang/dep/cmd/dep
    - go get -u github.com/GeertJohan/go.rice/rice
    - $GOPATH/bin/dep ensure -vendor-only
  artifacts:
    untracked: true

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    - rice embed-go -i ./command
    - go build -o $CI_PROJECT_DIR/autominer
  artifacts:
    paths:
      - autominer
